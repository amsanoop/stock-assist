name: stockassist
version: '3.8'

# IMPORTANT: Before running, update the following:
# 1. Set MYSQL_ROOT_PASSWORD to a secure password
# 2. Update setup.sql with your admin credentials
# 3. Replace any domain references with your actual domain

services:
  redis:
    image: redis:alpine
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning --requirepass "${REDIS_PASSWORD:-}"
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}

  mysql:
    image: mysql:8.0
    volumes:
      - mysql-data:/var/lib/mysql
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - ./mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    environment:
      # CRITICAL: Set a secure password here or in .env file
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-StockAssist2024!SecureDB}"
      MYSQL_DATABASE: "stockassist"
      MYSQL_ROOT_HOST: "%"
      # Optional: Create additional user for application
      MYSQL_USER: "${MYSQL_USER:-stockassist_user}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-StockAssist2024!AppUser}"
    ports:
      - "127.0.0.1:3306:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-buffer-pool-size=512M
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Optional: Application container (uncomment to run app in Docker)
  # app:
  #   build: .
  #   ports:
  #     - "80:80"
  #   environment:
  #     - APP_ENV=production
  #     - MYSQL_HOST=mysql
  #     - REDIS_HOST=redis
  #   depends_on:
  #     - mysql
  #     - redis
  #   restart: unless-stopped

volumes:
  redis-data:
  mysql-data:
